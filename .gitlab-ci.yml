# This file is a template, and might need editing before it works on your project.
# Official image for Hashicorp's Terraform. It uses light image which is Alpine
# based as it is much lighter.
#
# Entrypoint is also needed as image by default set `terraform` binary as an
# entrypoint.

#  entrypoint:
#    - '/usr/bin/env'
#    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# Default output file for Terraform plan
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  VERSION_FILE: version.sh
  GIT_DEPTH: 500
  PLAN: plan.tfplan
  JSON_PLAN_FILE: tfplan.json
  DOCKER_VERSION: 19.03.12
  JDK_VERSION: 11.0.10.hs-adpt
  SBT_VERSION: 1.3.13
  SCALA_VERSION: 2.12.10
  IMAGE_NAME: biodatageeks/tbd-os


stages:
  - version
  - validate
  - buildPublish



# --------------------------------- STAGE: version ---------------------------------------------------------------------
version-branch:
  stage: version
  image:
    name: mdomke/git-semver:v4.0.1
    entrypoint: [""]
  script:
    - cd /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME && git-semver --format x.y.z+m | sed 's/+/-/g' | xargs -I {} echo "export VERSION={}" > $VERSION_FILE
    - cat $VERSION_FILE
  artifacts:
    paths:
      - $VERSION_FILE
  tags: [ docker ]
  except: [ main, tags ]

version-tag:
  stage: version
  image:
    name: mdomke/git-semver:v4.0.1
    entrypoint: [""]
  script:
    - cd /builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME && git-semver --no-hash --no-pre | xargs -I {} echo "export VERSION={}" > $VERSION_FILE
    - cat $VERSION_FILE
  artifacts:
    paths:
      - $VERSION_FILE
  tags: [ docker ]
  only:
    - tags
  except:
    - branches

validate:
  stage: validate
  image:
    name: hashicorp/terraform:0.14.7
    entrypoint: [ "" ]
  before_script:
    - terraform --version
    - terraform init
  script:
    - terraform validate
  cache:
    paths:
      - .terraform
      - .terraform.lock.hcl
  tags: [ docker ]

buildPublish:
  stage: buildPublish
  image:
    name: docker:$DOCKER_VERSION
  before_script:
    - source $VERSION_FILE
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWD docker.io
  script:
    - cd docker/
    - docker build
      --build-arg JAVA_VERSION=$JDK_VERSION
      --build-arg SCALA_VERSION=$SCALA_VERSION
      --build-arg SBT_VERSION=$SBT_VERSION
      -t $IMAGE_NAME:$VERSION
      .
    - docker push $IMAGE_NAME:$VERSION
  tags: [ docker ]
  